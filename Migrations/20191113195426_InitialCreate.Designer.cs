// <auto-generated />
using System;
using Hieromemics.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hieromemics.Migrations
{
    [DbContext(typeof(HieromemicsContext))]
    [Migration("20191113195426_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Hieromemics.Models.SavedPics", b =>
                {
                    b.Property<int>("SavedPicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PicID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("SavedPicID");

                    b.HasIndex("PicID");

                    b.HasIndex("UserID");

                    b.ToTable("SavedPics");
                });

            modelBuilder.Entity("Hieromemics.Models.friendList", b =>
                {
                    b.Property<int>("FriendListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FriendCode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("FriendListID");

                    b.HasIndex("UserID");

                    b.ToTable("friendList");
                });

            modelBuilder.Entity("Hieromemics.Models.messages", b =>
                {
                    b.Property<int>("messageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FriendCode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PicID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("messageID");

                    b.HasIndex("PicID");

                    b.HasIndex("UserID");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("Hieromemics.Models.pictures", b =>
                {
                    b.Property<int>("PicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoragePath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.HasKey("PicID");

                    b.ToTable("pictures");
                });

            modelBuilder.Entity("Hieromemics.Models.templates", b =>
                {
                    b.Property<int>("TemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PicID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TemplateID");

                    b.HasIndex("PicID");

                    b.ToTable("templates");
                });

            modelBuilder.Entity("Hieromemics.Models.users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FriendCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Hieromemics.Models.SavedPics", b =>
                {
                    b.HasOne("Hieromemics.Models.pictures", "pictures")
                        .WithMany("SavedPics")
                        .HasForeignKey("PicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hieromemics.Models.users", "users")
                        .WithMany("SavedPics")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hieromemics.Models.friendList", b =>
                {
                    b.HasOne("Hieromemics.Models.users", "users")
                        .WithMany("friendList")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hieromemics.Models.messages", b =>
                {
                    b.HasOne("Hieromemics.Models.pictures", "pictures")
                        .WithMany("messages")
                        .HasForeignKey("PicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hieromemics.Models.users", "users")
                        .WithMany("messages")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hieromemics.Models.templates", b =>
                {
                    b.HasOne("Hieromemics.Models.pictures", "pictures")
                        .WithMany("templates")
                        .HasForeignKey("PicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
